{"version":3,"sources":["table/Table.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","noop","stopPropagation","nativeEvent","stopImmediatePropagation","getRowSelection","props","rowSelection","defaultPagination","onChange","onShowSizeChange","emptyObject","Table","getCheckboxPropsByItem","item","index","getCheckboxProps","key","getRecordKey","CheckboxPropsCache","checkboxProps","onRow","prefixCls","record","custom","store","rowKey","handleFilter","column","nextFilters","pagination","state","filters","getColumnKey","currentColumnKeys","columns","c","children","push","keys","forEach","columnKey","current","newState","filtersToSetState","getFilteredValueColumns","col","setState","selectionDirty","apply","prepareParamsArguments","handleSelect","rowIndex","checked","target","defaultSelection","getState","getDefaultSelection","selectedRowKeys","concat","pivot","rows","getFlatCurrentPageData","realIndex","expandedRowRender","findIndex","row","shiftKey","undefined","changeRowKeys","direction","Math","sign","dist","abs","step","disabled","includes","filter","j","setSelectedRowKeys","selectWay","handleRadioSelect","handleSelectRow","selectionKey","onSelectFunc","data","changeableRowKeys","map","splice","customSelectionStartIndex","hideDefaultSelections","handlePageChange","otherArguments","renderSelectionBox","type","_","handleChange","recordKey","generatePopupContainerFunc","getPopupContainer","scroll","ReactDOM","findDOMNode","handleShowSizeChange","pageSize","nextPagination","renderExpandIcon","expandable","expanded","needIndentSpaced","onExpand","defaultLocale","locale","event","collapse","expand","renderTable","renderEmpty","dropdownPrefixCls","contextLocale","contextGetPopupContainer","_a","style","className","showHeader","restProps","getCurrentPageData","expandIconAsCell","realGetPopupContainer","mergedLocale","emptyText","classString","size","bordered","columnsWithRowSelection","renderRowSelection","renderColumnsDropdown","newColumn","expandIconColumnIndex","components","renderComponent","getPrefixCls","customizePrefixCls","customizeDropdownPrefixCls","loading","spinning","table","paginationPatchClass","hasPagination","renderPagination","some","fixed","createComponents","getDefaultSortOrder","getFiltersFromColumns","getDefaultPagination","getFlatData","defaultChecked","defaultCurrent","defaultPageSize","nextProps","previousState","newPagination","dataSource","getSortOrderColumns","sortState","getSortStateFromColumns","sortColumn","sortOrder","filteredValueColumns","filtersFromColumns","newFilters","isFiltersChanged","selectionInfo","selectedRows","onSelect","onSelectMultiple","changeRows","onSelectAll","onSelectInvert","filtersChanged","filteredValue","colKey","definedSortState","defaultSortedColumn","defaultSortOrder","sortedColumn","sorter","a","b","result","value","other","toString","sortDirections","newSortOrder","isSameColumn","methodIndex","selectionColumnClass","selections","selectionColumn","render","width","columnWidth","title","columnTitle","INTERNAL_COL_DEFINE","checkboxAllDisabled","every","unshift","dataIndex","total","floor","filterDropdown","sortButton","onHeaderCell","isSortColumn","colFilters","isAscend","isDescend","ascend","descend","sortTitle","colProps","onHeaderCellClick","onClick","toggleSortOrder","renderColumnTitle","Function","paginationPosition","position","getLocalData","getMaxCurrent","order","field","extra","currentDataSource","myKey","Number","MAX_VALUE","childrenColumnName","sorterFn","sort","recursiveSort","currentState","slice","getSorterFn","findColumn","values","onFilter","v","prevComponents","bodyRow","body","preBodyRow","React","Component","Column","ColumnGroup","propTypes","PropTypes","array","string","useFixedHeader","bool","object","oneOfType","func","defaultProps","indentSize"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport RcTable, { INTERNAL_COL_DEFINE } from 'rc-table';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport FilterDropdown from './filterDropdown';\nimport createStore from './createStore';\nimport SelectionBox from './SelectionBox';\nimport SelectionCheckboxAll from './SelectionCheckboxAll';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport createBodyRow from './createBodyRow';\nimport { flatArray, treeMap, flatFilter, normalizeColumns } from './util';\nimport Pagination from '../pagination';\nimport Icon from '../icon';\nimport Spin from '../spin';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nfunction noop() { }\nfunction stopPropagation(e) {\n    e.stopPropagation();\n    if (e.nativeEvent.stopImmediatePropagation) {\n        e.nativeEvent.stopImmediatePropagation();\n    }\n}\nfunction getRowSelection(props) {\n    return props.rowSelection || {};\n}\nconst defaultPagination = {\n    onChange: noop,\n    onShowSizeChange: noop,\n};\n/**\n * Avoid creating new object, so that parent component's shouldComponentUpdate\n * can works appropriately。\n */\nconst emptyObject = {};\nexport default class Table extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getCheckboxPropsByItem = (item, index) => {\n            const rowSelection = getRowSelection(this.props);\n            if (!rowSelection.getCheckboxProps) {\n                return {};\n            }\n            const key = this.getRecordKey(item, index);\n            // Cache checkboxProps\n            if (!this.CheckboxPropsCache[key]) {\n                this.CheckboxPropsCache[key] = rowSelection.getCheckboxProps(item) || {};\n                const checkboxProps = this.CheckboxPropsCache[key];\n                warning(!('checked' in checkboxProps) && !('defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n            }\n            return this.CheckboxPropsCache[key];\n        };\n        this.onRow = (prefixCls, record, index) => {\n            const { onRow } = this.props;\n            const custom = onRow ? onRow(record, index) : {};\n            return Object.assign({}, custom, { prefixCls, store: this.store, rowKey: this.getRecordKey(record, index) });\n        };\n        this.handleFilter = (column, nextFilters) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            const filters = Object.assign({}, this.state.filters, { [this.getColumnKey(column)]: nextFilters });\n            // Remove filters not in current columns\n            const currentColumnKeys = [];\n            treeMap(this.columns, c => {\n                if (!c.children) {\n                    currentColumnKeys.push(this.getColumnKey(c));\n                }\n            });\n            Object.keys(filters).forEach(columnKey => {\n                if (currentColumnKeys.indexOf(columnKey) < 0) {\n                    delete filters[columnKey];\n                }\n            });\n            if (props.pagination) {\n                // Reset current prop\n                pagination.current = 1;\n                pagination.onChange(pagination.current);\n            }\n            const newState = {\n                pagination,\n                filters: {},\n            };\n            const filtersToSetState = Object.assign({}, filters);\n            // Remove filters which is controlled\n            this.getFilteredValueColumns().forEach((col) => {\n                const columnKey = this.getColumnKey(col);\n                if (columnKey) {\n                    delete filtersToSetState[columnKey];\n                }\n            });\n            if (Object.keys(filtersToSetState).length > 0) {\n                newState.filters = filtersToSetState;\n            }\n            // Controlled current prop will not respond user interaction\n            if (typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign({}, pagination, { current: this.state.pagination.current });\n            }\n            this.setState(newState, () => {\n                this.store.setState({\n                    selectionDirty: false,\n                });\n                const { onChange } = this.props;\n                if (onChange) {\n                    onChange.apply(null, this.prepareParamsArguments(Object.assign({}, this.state, { selectionDirty: false, filters,\n                        pagination })));\n                }\n            });\n        };\n        this.handleSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n            let selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n            const key = this.getRecordKey(record, rowIndex);\n            const { pivot } = this.state;\n            const rows = this.getFlatCurrentPageData();\n            let realIndex = rowIndex;\n            if (this.props.expandedRowRender) {\n                realIndex = rows.findIndex(row => this.getRecordKey(row, rowIndex) === key);\n            }\n            if (nativeEvent.shiftKey && pivot !== undefined && realIndex !== pivot) {\n                const changeRowKeys = [];\n                const direction = Math.sign(pivot - realIndex);\n                const dist = Math.abs(pivot - realIndex);\n                let step = 0;\n                while (step <= dist) {\n                    const i = realIndex + step * direction;\n                    step += 1;\n                    const row = rows[i];\n                    const rowKey = this.getRecordKey(row, i);\n                    const checkboxProps = this.getCheckboxPropsByItem(row, i);\n                    if (!checkboxProps.disabled) {\n                        if (selectedRowKeys.includes(rowKey)) {\n                            if (!checked) {\n                                selectedRowKeys = selectedRowKeys.filter((j) => rowKey !== j);\n                                changeRowKeys.push(rowKey);\n                            }\n                        }\n                        else if (checked) {\n                            selectedRowKeys.push(rowKey);\n                            changeRowKeys.push(rowKey);\n                        }\n                    }\n                }\n                this.setState({ pivot: realIndex });\n                this.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelectMultiple',\n                    record,\n                    checked,\n                    changeRowKeys,\n                    nativeEvent,\n                });\n            }\n            else {\n                if (checked) {\n                    selectedRowKeys.push(this.getRecordKey(record, realIndex));\n                }\n                else {\n                    selectedRowKeys = selectedRowKeys.filter((i) => key !== i);\n                }\n                this.setState({ pivot: realIndex });\n                this.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelect',\n                    record,\n                    checked,\n                    changeRowKeys: void 0,\n                    nativeEvent,\n                });\n            }\n        };\n        this.handleRadioSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const key = this.getRecordKey(record, rowIndex);\n            const selectedRowKeys = [key];\n            this.store.setState({\n                selectionDirty: true,\n            });\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay: 'onSelect',\n                record,\n                checked,\n                changeRowKeys: void 0,\n                nativeEvent,\n            });\n        };\n        this.handleSelectRow = (selectionKey, index, onSelectFunc) => {\n            const data = this.getFlatCurrentPageData();\n            const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n            const selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n            const changeableRowKeys = data\n                .filter((item, i) => !this.getCheckboxPropsByItem(item, i).disabled)\n                .map((item, i) => this.getRecordKey(item, i));\n            const changeRowKeys = [];\n            let selectWay = 'onSelectAll';\n            let checked;\n            // handle default selection\n            switch (selectionKey) {\n                case 'all':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = true;\n                    break;\n                case 'removeAll':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) >= 0) {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = false;\n                    break;\n                case 'invert':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                        }\n                        else {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                        }\n                        changeRowKeys.push(key);\n                        selectWay = 'onSelectInvert';\n                    });\n                    break;\n                default:\n                    break;\n            }\n            this.store.setState({\n                selectionDirty: true,\n            });\n            // when select custom selection, callback selections[n].onSelect\n            const { rowSelection } = this.props;\n            let customSelectionStartIndex = 2;\n            if (rowSelection && rowSelection.hideDefaultSelections) {\n                customSelectionStartIndex = 0;\n            }\n            if (index >= customSelectionStartIndex && typeof onSelectFunc === 'function') {\n                return onSelectFunc(changeableRowKeys);\n            }\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay,\n                checked,\n                changeRowKeys,\n            });\n        };\n        this.handlePageChange = (current, ...otherArguments) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            if (current) {\n                pagination.current = current;\n            }\n            else {\n                pagination.current = pagination.current || 1;\n            }\n            pagination.onChange(pagination.current, ...otherArguments);\n            const newState = {\n                pagination,\n            };\n            // Controlled current prop will not respond user interaction\n            if (props.pagination && typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign({}, pagination, { current: this.state.pagination.current });\n            }\n            this.setState(newState);\n            this.store.setState({\n                selectionDirty: false,\n            });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign({}, this.state, { selectionDirty: false, pagination })));\n            }\n        };\n        this.renderSelectionBox = (type) => {\n            return (_, record, index) => {\n                const rowKey = this.getRecordKey(record, index);\n                const props = this.getCheckboxPropsByItem(record, index);\n                const handleChange = (e) => {\n                    type === 'radio'\n                        ? this.handleRadioSelect(record, index, e)\n                        : this.handleSelect(record, index, e);\n                };\n                return (<span onClick={stopPropagation}>\n          <SelectionBox type={type} store={this.store} rowIndex={rowKey} onChange={handleChange} defaultSelection={this.getDefaultSelection()} {...props}/>\n        </span>);\n            };\n        };\n        this.getRecordKey = (record, index) => {\n            const { rowKey } = this.props;\n            const recordKey = typeof rowKey === 'function' ? rowKey(record, index) : record[rowKey];\n            warning(recordKey !== undefined, 'Table', 'Each record in dataSource of table should have a unique `key` prop, ' +\n                'or set `rowKey` of Table to an unique primary key, ' +\n                'see https://u.ant.design/table-row-key');\n            return recordKey === undefined ? index : recordKey;\n        };\n        this.generatePopupContainerFunc = (getPopupContainer) => {\n            const { scroll } = this.props;\n            if (getPopupContainer) {\n                return getPopupContainer;\n            }\n            // Use undefined to let rc component use default logic.\n            return scroll ? () => ReactDOM.findDOMNode(this) : undefined;\n        };\n        this.handleShowSizeChange = (current, pageSize) => {\n            const { pagination } = this.state;\n            pagination.onShowSizeChange(current, pageSize);\n            const nextPagination = Object.assign({}, pagination, { pageSize,\n                current });\n            this.setState({ pagination: nextPagination });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign({}, this.state, { pagination: nextPagination })));\n            }\n        };\n        this.renderExpandIcon = (prefixCls) => ({ expandable, expanded, needIndentSpaced, record, onExpand, }) => {\n            if (expandable) {\n                return (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n          {(locale) => (<TransButton className={classNames(`${prefixCls}-row-expand-icon`, {\n                    [`${prefixCls}-row-collapsed`]: !expanded,\n                    [`${prefixCls}-row-expanded`]: expanded,\n                })} onClick={event => {\n                    onExpand(record, event);\n                }} aria-label={expanded ? locale.collapse : locale.expand} noStyle/>)}\n        </LocaleReceiver>);\n            }\n            if (needIndentSpaced) {\n                return <span className={`${prefixCls}-row-expand-icon ${prefixCls}-row-spaced`}/>;\n            }\n            return null;\n        };\n        this.renderTable = ({ prefixCls, renderEmpty, dropdownPrefixCls, contextLocale, getPopupContainer: contextGetPopupContainer, }) => {\n            const _a = this.props, { style, className, showHeader, locale, getPopupContainer } = _a, restProps = __rest(_a, [\"style\", \"className\", \"showHeader\", \"locale\", \"getPopupContainer\"]);\n            const data = this.getCurrentPageData();\n            const expandIconAsCell = this.props.expandedRowRender && this.props.expandIconAsCell !== false;\n            // use props.getPopupContainer first\n            const realGetPopupContainer = getPopupContainer || contextGetPopupContainer;\n            // Merge too locales\n            const mergedLocale = Object.assign({}, contextLocale, locale);\n            if (!locale || !locale.emptyText) {\n                mergedLocale.emptyText = renderEmpty('Table');\n            }\n            const classString = classNames({\n                [`${prefixCls}-${this.props.size}`]: true,\n                [`${prefixCls}-bordered`]: this.props.bordered,\n                [`${prefixCls}-empty`]: !data.length,\n                [`${prefixCls}-without-column-header`]: !showHeader,\n            });\n            const columnsWithRowSelection = this.renderRowSelection({\n                prefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            });\n            const columns = this.renderColumnsDropdown({\n                columns: columnsWithRowSelection,\n                prefixCls,\n                dropdownPrefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            }).map((column, i) => {\n                const newColumn = Object.assign({}, column);\n                newColumn.key = this.getColumnKey(newColumn, i);\n                return newColumn;\n            });\n            let expandIconColumnIndex = columns[0] && columns[0].key === 'selection-column' ? 1 : 0;\n            if ('expandIconColumnIndex' in restProps) {\n                expandIconColumnIndex = restProps.expandIconColumnIndex;\n            }\n            return (<RcTable key=\"table\" expandIcon={this.renderExpandIcon(prefixCls)} {...restProps} onRow={(record, index) => this.onRow(prefixCls, record, index)} components={this.components} prefixCls={prefixCls} data={data} columns={columns} showHeader={showHeader} className={classString} expandIconColumnIndex={expandIconColumnIndex} expandIconAsCell={expandIconAsCell} emptyText={mergedLocale.emptyText}/>);\n        };\n        this.renderComponent = ({ getPrefixCls, renderEmpty, getPopupContainer }) => {\n            const { prefixCls: customizePrefixCls, dropdownPrefixCls: customizeDropdownPrefixCls, style, className, } = this.props;\n            const data = this.getCurrentPageData();\n            let loading = this.props.loading;\n            if (typeof loading === 'boolean') {\n                loading = {\n                    spinning: loading,\n                };\n            }\n            const prefixCls = getPrefixCls('table', customizePrefixCls);\n            const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n            const table = (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n        {locale => this.renderTable({\n                prefixCls,\n                renderEmpty,\n                dropdownPrefixCls,\n                contextLocale: locale,\n                getPopupContainer,\n            })}\n      </LocaleReceiver>);\n            // if there is no pagination or no data,\n            // the height of spin should decrease by half of pagination\n            const paginationPatchClass = this.hasPagination() && data && data.length !== 0\n                ? `${prefixCls}-with-pagination`\n                : `${prefixCls}-without-pagination`;\n            return (<div className={classNames(`${prefixCls}-wrapper`, className)} style={style}>\n        <Spin {...loading} className={loading.spinning ? `${paginationPatchClass} ${prefixCls}-spin-holder` : ''}>\n          {this.renderPagination(prefixCls, 'top')}\n          {table}\n          {this.renderPagination(prefixCls, 'bottom')}\n        </Spin>\n      </div>);\n        };\n        const { expandedRowRender, columns = [] } = props;\n        warning(!('columnsPageRange' in props || 'columnsPageSize' in props), 'Table', '`columnsPageRange` and `columnsPageSize` are removed, please use ' +\n            'fixed columns instead, see: https://u.ant.design/fixed-columns.');\n        if (expandedRowRender && columns.some(({ fixed }) => !!fixed)) {\n            warning(false, 'Table', '`expandedRowRender` and `Column.fixed` are not compatible. Please use one of them at one time.');\n        }\n        this.columns = props.columns || normalizeColumns(props.children);\n        this.createComponents(props.components);\n        this.state = Object.assign({}, this.getDefaultSortOrder(this.columns), { \n            // 减少状态\n            filters: this.getFiltersFromColumns(), pagination: this.getDefaultPagination(props), pivot: undefined });\n        this.CheckboxPropsCache = {};\n        this.store = createStore({\n            selectedRowKeys: getRowSelection(props).selectedRowKeys || [],\n            selectionDirty: false,\n        });\n    }\n    getDefaultSelection() {\n        const rowSelection = getRowSelection(this.props);\n        if (!rowSelection.getCheckboxProps) {\n            return [];\n        }\n        return this.getFlatData()\n            .filter((item, rowIndex) => this.getCheckboxPropsByItem(item, rowIndex).defaultChecked)\n            .map((record, rowIndex) => this.getRecordKey(record, rowIndex));\n    }\n    getDefaultPagination(props) {\n        const pagination = typeof props.pagination === 'object' ? props.pagination : {};\n        let current;\n        if ('current' in pagination) {\n            current = pagination.current;\n        }\n        else if ('defaultCurrent' in pagination) {\n            current = pagination.defaultCurrent;\n        }\n        let pageSize;\n        if ('pageSize' in pagination) {\n            pageSize = pagination.pageSize;\n        }\n        else if ('defaultPageSize' in pagination) {\n            pageSize = pagination.defaultPageSize;\n        }\n        return this.hasPagination(props)\n            ? Object.assign({}, defaultPagination, pagination, { current: current || 1, pageSize: pageSize || 10 }) : {};\n    }\n    componentWillReceiveProps(nextProps) {\n        this.columns = nextProps.columns || normalizeColumns(nextProps.children);\n        if ('pagination' in nextProps || 'pagination' in this.props) {\n            this.setState(previousState => {\n                const newPagination = Object.assign({}, defaultPagination, previousState.pagination, nextProps.pagination);\n                newPagination.current = newPagination.current || 1;\n                newPagination.pageSize = newPagination.pageSize || 10;\n                return { pagination: nextProps.pagination !== false ? newPagination : emptyObject };\n            });\n        }\n        if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {\n            this.store.setState({\n                selectedRowKeys: nextProps.rowSelection.selectedRowKeys || [],\n            });\n        }\n        else if (this.props.rowSelection && !nextProps.rowSelection) {\n            this.store.setState({\n                selectedRowKeys: [],\n            });\n        }\n        if ('dataSource' in nextProps && nextProps.dataSource !== this.props.dataSource) {\n            this.store.setState({\n                selectionDirty: false,\n            });\n        }\n        // https://github.com/ant-design/ant-design/issues/10133\n        this.CheckboxPropsCache = {};\n        if (this.getSortOrderColumns(this.columns).length > 0) {\n            const sortState = this.getSortStateFromColumns(this.columns);\n            if (sortState.sortColumn !== this.state.sortColumn ||\n                sortState.sortOrder !== this.state.sortOrder) {\n                this.setState(sortState);\n            }\n        }\n        const filteredValueColumns = this.getFilteredValueColumns(this.columns);\n        if (filteredValueColumns.length > 0) {\n            const filtersFromColumns = this.getFiltersFromColumns(this.columns);\n            const newFilters = Object.assign({}, this.state.filters);\n            Object.keys(filtersFromColumns).forEach(key => {\n                newFilters[key] = filtersFromColumns[key];\n            });\n            if (this.isFiltersChanged(newFilters)) {\n                this.setState({ filters: newFilters });\n            }\n        }\n        this.createComponents(nextProps.components, this.props.components);\n    }\n    setSelectedRowKeys(selectedRowKeys, selectionInfo) {\n        const { selectWay, record, checked, changeRowKeys, nativeEvent } = selectionInfo;\n        const rowSelection = getRowSelection(this.props);\n        if (rowSelection && !('selectedRowKeys' in rowSelection)) {\n            this.store.setState({ selectedRowKeys });\n        }\n        const data = this.getFlatData();\n        if (!rowSelection.onChange && !rowSelection[selectWay]) {\n            return;\n        }\n        const selectedRows = data.filter((row, i) => selectedRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n        if (rowSelection.onChange) {\n            rowSelection.onChange(selectedRowKeys, selectedRows);\n        }\n        if (selectWay === 'onSelect' && rowSelection.onSelect) {\n            rowSelection.onSelect(record, checked, selectedRows, nativeEvent);\n        }\n        else if (selectWay === 'onSelectMultiple' && rowSelection.onSelectMultiple) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectMultiple(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectAll' && rowSelection.onSelectAll) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectAll(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectInvert' && rowSelection.onSelectInvert) {\n            rowSelection.onSelectInvert(selectedRowKeys);\n        }\n    }\n    hasPagination(props) {\n        return (props || this.props).pagination !== false;\n    }\n    isFiltersChanged(filters) {\n        let filtersChanged = false;\n        if (Object.keys(filters).length !== Object.keys(this.state.filters).length) {\n            filtersChanged = true;\n        }\n        else {\n            Object.keys(filters).forEach(columnKey => {\n                if (filters[columnKey] !== this.state.filters[columnKey]) {\n                    filtersChanged = true;\n                }\n            });\n        }\n        return filtersChanged;\n    }\n    getSortOrderColumns(columns) {\n        return flatFilter(columns || this.columns || [], (column) => 'sortOrder' in column);\n    }\n    getFilteredValueColumns(columns) {\n        return flatFilter(columns || this.columns || [], (column) => typeof column.filteredValue !== 'undefined');\n    }\n    getFiltersFromColumns(columns) {\n        const filters = {};\n        this.getFilteredValueColumns(columns).forEach((col) => {\n            const colKey = this.getColumnKey(col);\n            filters[colKey] = col.filteredValue;\n        });\n        return filters;\n    }\n    getDefaultSortOrder(columns) {\n        const definedSortState = this.getSortStateFromColumns(columns);\n        const defaultSortedColumn = flatFilter(columns || [], (column) => column.defaultSortOrder != null)[0];\n        if (defaultSortedColumn && !definedSortState.sortColumn) {\n            return {\n                sortColumn: defaultSortedColumn,\n                sortOrder: defaultSortedColumn.defaultSortOrder,\n            };\n        }\n        return definedSortState;\n    }\n    getSortStateFromColumns(columns) {\n        // return first column which sortOrder is not falsy\n        const sortedColumn = this.getSortOrderColumns(columns).filter((col) => col.sortOrder)[0];\n        if (sortedColumn) {\n            return {\n                sortColumn: sortedColumn,\n                sortOrder: sortedColumn.sortOrder,\n            };\n        }\n        return {\n            sortColumn: null,\n            sortOrder: null,\n        };\n    }\n    getSorterFn(state) {\n        const { sortOrder, sortColumn } = state || this.state;\n        if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== 'function') {\n            return;\n        }\n        return (a, b) => {\n            const result = sortColumn.sorter(a, b, sortOrder);\n            if (result !== 0) {\n                return sortOrder === 'descend' ? -result : result;\n            }\n            return 0;\n        };\n    }\n    isSameColumn(a, b) {\n        if (a && b && a.key && a.key === b.key) {\n            return true;\n        }\n        return (a === b ||\n            shallowEqual(a, b, (value, other) => {\n                if (typeof value === 'function' && typeof other === 'function') {\n                    return value === other || value.toString() === other.toString();\n                }\n            }));\n    }\n    toggleSortOrder(column) {\n        if (!column.sorter) {\n            return;\n        }\n        const pagination = Object.assign({}, this.state.pagination);\n        const sortDirections = column.sortDirections || this.props.sortDirections;\n        const { sortOrder, sortColumn } = this.state;\n        // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题\n        let newSortOrder;\n        // 切换另一列时，丢弃 sortOrder 的状态\n        if (this.isSameColumn(sortColumn, column) && sortOrder !== undefined) {\n            // 按照sortDirections的内容依次切换排序状态\n            const methodIndex = sortDirections.indexOf(sortOrder) + 1;\n            newSortOrder =\n                methodIndex === sortDirections.length ? undefined : sortDirections[methodIndex];\n        }\n        else {\n            newSortOrder = sortDirections[0];\n        }\n        if (this.props.pagination) {\n            // Reset current prop\n            pagination.current = 1;\n            pagination.onChange(pagination.current);\n        }\n        const newState = {\n            pagination,\n            sortOrder: newSortOrder,\n            sortColumn: newSortOrder ? column : null,\n        };\n        // Controlled\n        if (this.getSortOrderColumns().length === 0) {\n            this.setState(newState);\n        }\n        const { onChange } = this.props;\n        if (onChange) {\n            onChange.apply(null, this.prepareParamsArguments(Object.assign({}, this.state, newState)));\n        }\n    }\n    renderRowSelection({ prefixCls, locale, getPopupContainer, }) {\n        const { rowSelection } = this.props;\n        const columns = this.columns.concat();\n        if (rowSelection) {\n            const data = this.getFlatCurrentPageData().filter((item, index) => {\n                if (rowSelection.getCheckboxProps) {\n                    return !this.getCheckboxPropsByItem(item, index).disabled;\n                }\n                return true;\n            });\n            const selectionColumnClass = classNames(`${prefixCls}-selection-column`, {\n                [`${prefixCls}-selection-column-custom`]: rowSelection.selections,\n            });\n            const selectionColumn = {\n                key: 'selection-column',\n                render: this.renderSelectionBox(rowSelection.type),\n                className: selectionColumnClass,\n                fixed: rowSelection.fixed,\n                width: rowSelection.columnWidth,\n                title: rowSelection.columnTitle,\n                [INTERNAL_COL_DEFINE]: {\n                    className: `${prefixCls}-selection-col`,\n                },\n            };\n            if (rowSelection.type !== 'radio') {\n                const checkboxAllDisabled = data.every((item, index) => this.getCheckboxPropsByItem(item, index).disabled);\n                selectionColumn.title = selectionColumn.title || (<SelectionCheckboxAll store={this.store} locale={locale} data={data} getCheckboxPropsByItem={this.getCheckboxPropsByItem} getRecordKey={this.getRecordKey} disabled={checkboxAllDisabled} prefixCls={prefixCls} onSelect={this.handleSelectRow} selections={rowSelection.selections} hideDefaultSelections={rowSelection.hideDefaultSelections} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)}/>);\n            }\n            if ('fixed' in rowSelection) {\n                selectionColumn.fixed = rowSelection.fixed;\n            }\n            else if (columns.some(column => column.fixed === 'left' || column.fixed === true)) {\n                selectionColumn.fixed = 'left';\n            }\n            if (columns[0] && columns[0].key === 'selection-column') {\n                columns[0] = selectionColumn;\n            }\n            else {\n                columns.unshift(selectionColumn);\n            }\n        }\n        return columns;\n    }\n    getColumnKey(column, index) {\n        return column.key || column.dataIndex || index;\n    }\n    getMaxCurrent(total) {\n        const { pagination: { current, pageSize }, } = this.state;\n        if ((current - 1) * pageSize >= total) {\n            return Math.floor((total - 1) / pageSize) + 1;\n        }\n        return current;\n    }\n    isSortColumn(column) {\n        const { sortColumn } = this.state;\n        if (!column || !sortColumn) {\n            return false;\n        }\n        return this.getColumnKey(sortColumn) === this.getColumnKey(column);\n    }\n    renderColumnsDropdown({ prefixCls, dropdownPrefixCls, columns, locale, getPopupContainer, }) {\n        const { sortOrder, filters } = this.state;\n        return treeMap(columns, (column, i) => {\n            const key = this.getColumnKey(column, i);\n            let filterDropdown;\n            let sortButton;\n            let onHeaderCell = column.onHeaderCell;\n            const isSortColumn = this.isSortColumn(column);\n            if ((column.filters && column.filters.length > 0) || column.filterDropdown) {\n                const colFilters = key in filters ? filters[key] : [];\n                filterDropdown = (<FilterDropdown locale={locale} column={column} selectedKeys={colFilters} confirmFilter={this.handleFilter} prefixCls={`${prefixCls}-filter`} dropdownPrefixCls={dropdownPrefixCls || 'ant-dropdown'} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)} key=\"filter-dropdown\"/>);\n            }\n            if (column.sorter) {\n                const sortDirections = column.sortDirections || this.props.sortDirections;\n                const isAscend = isSortColumn && sortOrder === 'ascend';\n                const isDescend = isSortColumn && sortOrder === 'descend';\n                const ascend = sortDirections.indexOf('ascend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-up ${isAscend ? 'on' : 'off'}`} type=\"caret-up\" theme=\"filled\"/>);\n                const descend = sortDirections.indexOf('descend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-down ${isDescend ? 'on' : 'off'}`} type=\"caret-down\" theme=\"filled\"/>);\n                sortButton = (<div title={locale.sortTitle} className={classNames(`${prefixCls}-column-sorter-inner`, ascend && descend && `${prefixCls}-column-sorter-inner-full`)} key=\"sorter\">\n            {ascend}\n            {descend}\n          </div>);\n                onHeaderCell = (col) => {\n                    let colProps = {};\n                    // Get original first\n                    if (column.onHeaderCell) {\n                        colProps = Object.assign({}, column.onHeaderCell(col));\n                    }\n                    // Add sorter logic\n                    const onHeaderCellClick = colProps.onClick;\n                    colProps.onClick = (...args) => {\n                        this.toggleSortOrder(column);\n                        if (onHeaderCellClick) {\n                            onHeaderCellClick(...args);\n                        }\n                    };\n                    return colProps;\n                };\n            }\n            return Object.assign({}, column, { className: classNames(column.className, {\n                    [`${prefixCls}-column-has-actions`]: sortButton || filterDropdown,\n                    [`${prefixCls}-column-has-filters`]: filterDropdown,\n                    [`${prefixCls}-column-has-sorters`]: sortButton,\n                    [`${prefixCls}-column-sort`]: isSortColumn && sortOrder,\n                }), title: [\n                    <span key=\"title\" className={`${prefixCls}-header-column`}>\n            <div className={sortButton ? `${prefixCls}-column-sorters` : undefined}>\n              <span className={`${prefixCls}-column-title`}>\n                {this.renderColumnTitle(column.title)}\n              </span>\n              <span className={`${prefixCls}-column-sorter`}>{sortButton}</span>\n            </div>\n          </span>,\n                    filterDropdown,\n                ], onHeaderCell });\n        });\n    }\n    renderColumnTitle(title) {\n        const { filters, sortOrder } = this.state;\n        // https://github.com/ant-design/ant-design/issues/11246#issuecomment-405009167\n        if (title instanceof Function) {\n            return title({\n                filters,\n                sortOrder,\n            });\n        }\n        return title;\n    }\n    renderPagination(prefixCls, paginationPosition) {\n        // 强制不需要分页\n        if (!this.hasPagination()) {\n            return null;\n        }\n        let size = 'default';\n        const { pagination } = this.state;\n        if (pagination.size) {\n            size = pagination.size;\n        }\n        else if (this.props.size === 'middle' || this.props.size === 'small') {\n            size = 'small';\n        }\n        const position = pagination.position || 'bottom';\n        const total = pagination.total || this.getLocalData().length;\n        return total > 0 && (position === paginationPosition || position === 'both') ? (<Pagination key={`pagination-${paginationPosition}`} {...pagination} className={classNames(pagination.className, `${prefixCls}-pagination`)} onChange={this.handlePageChange} total={total} size={size} current={this.getMaxCurrent(total)} onShowSizeChange={this.handleShowSizeChange}/>) : null;\n    }\n    // Get pagination, filters, sorter\n    prepareParamsArguments(state) {\n        const pagination = Object.assign({}, state.pagination);\n        // remove useless handle function in Table.onChange\n        delete pagination.onChange;\n        delete pagination.onShowSizeChange;\n        const filters = state.filters;\n        const sorter = {};\n        if (state.sortColumn && state.sortOrder) {\n            sorter.column = state.sortColumn;\n            sorter.order = state.sortOrder;\n            sorter.field = state.sortColumn.dataIndex;\n            sorter.columnKey = this.getColumnKey(state.sortColumn);\n        }\n        const extra = {\n            currentDataSource: this.getLocalData(state),\n        };\n        return [pagination, filters, sorter, extra];\n    }\n    findColumn(myKey) {\n        let column;\n        treeMap(this.columns, c => {\n            if (this.getColumnKey(c) === myKey) {\n                column = c;\n            }\n        });\n        return column;\n    }\n    getCurrentPageData() {\n        let data = this.getLocalData();\n        let current;\n        let pageSize;\n        const state = this.state;\n        // 如果没有分页的话，默认全部展示\n        if (!this.hasPagination()) {\n            pageSize = Number.MAX_VALUE;\n            current = 1;\n        }\n        else {\n            pageSize = state.pagination.pageSize;\n            current = this.getMaxCurrent(state.pagination.total || data.length);\n        }\n        // 分页\n        // ---\n        // 当数据量少于等于每页数量时，直接设置数据\n        // 否则进行读取分页数据\n        if (data.length > pageSize || pageSize === Number.MAX_VALUE) {\n            data = data.filter((_, i) => {\n                return i >= (current - 1) * pageSize && i < current * pageSize;\n            });\n        }\n        return data;\n    }\n    getFlatData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getLocalData(null, false), childrenColumnName);\n    }\n    getFlatCurrentPageData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getCurrentPageData(), childrenColumnName);\n    }\n    recursiveSort(data, sorterFn) {\n        const { childrenColumnName = 'children' } = this.props;\n        return data.sort(sorterFn).map((item) => item[childrenColumnName]\n            ? Object.assign({}, item, { [childrenColumnName]: this.recursiveSort(item[childrenColumnName], sorterFn) }) : item);\n    }\n    getLocalData(state, filter = true) {\n        const currentState = state || this.state;\n        const { dataSource } = this.props;\n        let data = dataSource || [];\n        // 优化本地排序\n        data = data.slice(0);\n        const sorterFn = this.getSorterFn(currentState);\n        if (sorterFn) {\n            data = this.recursiveSort(data, sorterFn);\n        }\n        // 筛选\n        if (filter && currentState.filters) {\n            Object.keys(currentState.filters).forEach(columnKey => {\n                const col = this.findColumn(columnKey);\n                if (!col) {\n                    return;\n                }\n                const values = currentState.filters[columnKey] || [];\n                if (values.length === 0) {\n                    return;\n                }\n                const onFilter = col.onFilter;\n                data = onFilter\n                    ? data.filter(record => {\n                        return values.some(v => onFilter(v, record));\n                    })\n                    : data;\n            });\n        }\n        return data;\n    }\n    createComponents(components = {}, prevComponents) {\n        const bodyRow = components && components.body && components.body.row;\n        const preBodyRow = prevComponents && prevComponents.body && prevComponents.body.row;\n        if (!this.row || bodyRow !== preBodyRow) {\n            this.row = createBodyRow(bodyRow);\n        }\n        this.components = Object.assign({}, components, { body: Object.assign({}, components.body, { row: this.row }) });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nTable.propTypes = {\n    dataSource: PropTypes.array,\n    columns: PropTypes.array,\n    prefixCls: PropTypes.string,\n    useFixedHeader: PropTypes.bool,\n    rowSelection: PropTypes.object,\n    className: PropTypes.string,\n    size: PropTypes.string,\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    bordered: PropTypes.bool,\n    onChange: PropTypes.func,\n    locale: PropTypes.object,\n    dropdownPrefixCls: PropTypes.string,\n    sortDirections: PropTypes.array,\n    getPopupContainer: PropTypes.func,\n};\nTable.defaultProps = {\n    dataSource: [],\n    useFixedHeader: false,\n    className: '',\n    size: 'default',\n    loading: false,\n    bordered: false,\n    indentSize: 20,\n    locale: {},\n    rowKey: 'key',\n    showHeader: true,\n    sortDirections: ['ascend', 'descend'],\n    childrenColumnName: 'children',\n};\n"],"file":"Table.js"}