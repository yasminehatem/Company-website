{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Project\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import Button from 'antd/es/button';\n\nimport axios from 'axios';\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete, DatePicker } from 'antd';\nimport './App.css';\nconst Option = Select.Option;\nconst AutoCompleteOption = AutoComplete.Option;\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\nconst departments = [{\n  value: 'Department1',\n  label: 'Department1',\n  children: [{\n    value: 'Title1',\n    label: 'Title1'\n  }]\n}, {\n  value: 'Department2',\n  label: 'Department2',\n  children: [{\n    value: 'Title2',\n    label: 'Title2'\n  }]\n}];\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    this.onSubmit = () => {\n      axios.post(\"https://localhost:5432/company\", {\n        \"fullName\": \"yasmjhuommmmmine\",\n        \"email\": \"yassskihmine@mail.com\",\n        \"birthDate\": \"2020-02-02\",\n        \"depName\": \"Human Resources\",\n        \"titleName\": \"HR Manager\",\n        \"isLeader\": false\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    };\n\n    this.check = () => {\n      this.props.form.validateFields(err => {\n        if (!err) {\n          console.info('success');\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        checkNick: e.target.checked\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    this.handleWebsiteChange = value => {\n      let autoCompleteResult;\n\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => \"\".concat(value).concat(domain));\n      }\n\n      this.setState({\n        autoCompleteResult\n      });\n    };\n  }\n\n  render() {\n    const config = {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: 'Please select time!'\n      }]\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const autoCompleteResult = this.state.autoCompleteResult;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86'\n    })(React.createElement(Select, {\n      style: {\n        width: 70\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"86\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"+86\"), React.createElement(Option, {\n      value: \"87\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"+87\")));\n    const websiteOptions = autoCompleteResult.map(website => React.createElement(AutoCompleteOption, {\n      key: website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, website));\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Full Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      rules: [{\n        type: 'name',\n        message: 'The input is not valid Name'\n      }, {\n        required: true,\n        message: 'Please input your Full Name!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Birthdate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, getFieldDecorator('date-time-picker', config)(React.createElement(DatePicker, {\n      showTime: true,\n      format: \"YYYY-MM-DD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, getFieldDecorator('title', {\n      initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n      rules: [{\n        type: 'array',\n        required: true,\n        message: 'Please select your Title'\n      }]\n    })(React.createElement(Cascader, {\n      options: departments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      checked: this.state.checkNick,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Leader\")), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Register\")));\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\Project\\frontend\\src\\App.js"],"names":["React","Component","axios","Form","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","DatePicker","Option","AutoCompleteOption","formTailLayout","labelCol","span","wrapperCol","offset","departments","value","label","children","RegistrationForm","state","confirmDirty","autoCompleteResult","onSubmit","post","then","res","console","log","data","check","props","form","validateFields","err","info","handleChange","e","setState","checkNick","target","checked","handleSubmit","preventDefault","validateFieldsAndScroll","values","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","handleWebsiteChange","map","domain","render","config","rules","type","required","message","getFieldDecorator","formItemLayout","xs","sm","tailFormItemLayout","prefixSelector","initialValue","width","websiteOptions","website"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Button from 'antd/es/button';\nimport axios from 'axios';\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  DatePicker ,\n} from 'antd';\n\nimport './App.css';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst formTailLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8, offset: 4 },\n};\n\nconst departments = [\n  {\n    value: 'Department1',\n    label: 'Department1',\n    children: [\n      {\n        value: 'Title1',\n        label: 'Title1',\n        \n      },\n    ],\n  },\n  {\n    value: 'Department2',\n    label: 'Department2',\n    children: [\n      {\n        value: 'Title2',\n        label: 'Title2',\n        \n      },\n    ],\n  },\n];\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n  };\n\n  onSubmit = () => {\n\n    axios.post(`https://localhost:5432/company`, {\n\n      \"fullName\": \"yasmjhuommmmmine\",\n      \"email\": \"yassskihmine@mail.com\",\n      \"birthDate\": \"2020-02-02\",\n      \"depName\":\"Human Resources\",\n      \"titleName\":\"HR Manager\",\n      \"isLeader\": false\n\n    })\n        .then(res => {\n          console.log(res);\n          console.log(res.data);\n        })\n  };\n   \n  check = () => {\n    this.props.form.validateFields(err => {\n      if (!err) {\n        console.info('success');\n      }\n    });\n  };\n\n  handleChange = e => {\n    this.setState(\n      {\n        checkNick: e.target.checked,\n      },\n    );\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  render() {\n    const config = {\n      rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n    };\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    return (\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"Full Name\">\n        {getFieldDecorator('name', {\n            rules: [\n              {\n                type: 'name',\n                message: 'The input is not valid Name',\n              },\n              {\n                required: true,\n                message: 'Please input your Full Name!',\n              },\n            ],\n          })(<Input />)}\n        </Form.Item>\n\n        <Form.Item label=\"E-mail\">\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              }, \n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(<Input />)}\n        </Form.Item>\n        \n        <Form.Item label=\"Birthdate\">\n          {getFieldDecorator('date-time-picker', config)(\n            <DatePicker showTime format=\"YYYY-MM-DD\" />,\n          )}\n        </Form.Item>\n        \n        <Form.Item label=\"Title\">\n          {getFieldDecorator('title', {\n            initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n            rules: [\n              { type: 'array', required: true, message: 'Please select your Title' },\n            ],\n          })(<Cascader options={departments} />)}\n        </Form.Item>\n\n        <Form.Item {...tailFormItemLayout}>\n\n          <Checkbox checked={this.state.checkNick} onChange={this.handleChange}>\n            Leader\n          </Checkbox>\n\n        </Form.Item>\n         \n\n        \n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" onClick={this.onSubmit}>\n            Register\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\n\nexport default RegistrationForm;\n"]},"metadata":{},"sourceType":"module"}