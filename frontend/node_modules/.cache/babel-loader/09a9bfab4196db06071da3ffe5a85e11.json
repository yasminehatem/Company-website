{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Project\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import Button from 'antd/es/button';\n\nimport axios from 'axios';\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete, DatePicker } from 'antd';\nimport moment from 'moment';\nimport './App.css';\nconst Option = Select.Option;\nconst AutoCompleteOption = AutoComplete.Option;\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\nconst departments = [{\n  value: 'Human Resource',\n  label: 'Human Resource',\n  children: [{\n    value: 'HR Manager',\n    label: 'HR Manager'\n  }]\n}, {\n  value: 'Department2',\n  label: 'Department2',\n  children: [{\n    value: 'Title2',\n    label: 'Title2'\n  }]\n}];\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      checked: false\n    };\n\n    this.onSubmit = () => {\n      axios.post(\"http://localhost:8080/add\", {\n        fullName: \"Yasmin Marwan\",\n        birthDate: \"2019-02-02\",\n        email: \"y@mail.com\",\n        depName: \"Human Resources\",\n        titleName: \"HR Manager\",\n        isLeader: false\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    };\n\n    this.check = () => {\n      this.props.form.validateFields(err => {\n        if (!err) {\n          console.info('success');\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      if (this.state.checked == true) {\n        this.setState({\n          checked: false\n        });\n      } else {\n        this.setState({\n          checked: true\n        });\n      }\n\n      this.setState({\n        checkNick: e.target.checked\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          const depName = values.titleName[0];\n          values.titleName = values.titleName[1];\n          values.birthDate = moment(values.birthDate).format(\"YYYY-MM-DD\");\n          values.depName = depName;\n          values.isLeader = this.state.checked;\n          console.log('Received values of form: ', values);\n          axios.post(\"http://localhost:8080/add\", {\n            values\n          }).then(res => {\n            console.log(res);\n            console.log(res.data);\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const config = {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: 'Please select time!'\n      }]\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const autoCompleteResult = this.state.autoCompleteResult;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    }; // const prefixSelector = getFieldDecorator('prefix', {\n    //   initialValue: '86',\n    // })(\n    //   <Select style={{ width: 70 }}>\n    //     <Option value=\"86\">+86</Option>\n    //     <Option value=\"87\">+87</Option>\n    //   </Select>,\n    // );\n\n    const websiteOptions = autoCompleteResult.map(website => React.createElement(AutoCompleteOption, {\n      key: website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, website));\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      label: \"FullName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), getFieldDecorator('fullName', {\n      rules: [{\n        required: true,\n        message: 'Please input your name'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"Please input your Full Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"BirthDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, getFieldDecorator('birthDate', config)(React.createElement(DatePicker, {\n      showTime: true,\n      format: \"YYYY-MM-DD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, getFieldDecorator('titleName', {\n      rules: [{\n        type: 'array',\n        required: true,\n        message: 'Please select your Title'\n      }]\n    })(React.createElement(Cascader, {\n      options: departments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      checked: this.state.checkNick,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Leader\")), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Register\")));\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\Project\\frontend\\src\\App.js"],"names":["React","Component","axios","Form","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","DatePicker","moment","Option","AutoCompleteOption","formTailLayout","labelCol","span","wrapperCol","offset","departments","value","label","children","RegistrationForm","state","confirmDirty","autoCompleteResult","checked","onSubmit","post","fullName","birthDate","email","depName","titleName","isLeader","then","res","console","log","data","check","props","form","validateFields","err","info","handleChange","e","setState","checkNick","target","handleSubmit","preventDefault","validateFieldsAndScroll","values","format","render","config","rules","type","required","message","getFieldDecorator","formItemLayout","xs","sm","tailFormItemLayout","websiteOptions","map","website"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,OAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,MANF,EAOEC,GAPF,EAQEC,GARF,EASEC,QATF,EAUEC,MAVF,EAWEC,YAXF,EAYEC,UAZF,QAaO,MAbP;AAcA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,WAAP;MAEQC,M,GAAWR,M,CAAXQ,M;AACR,MAAMC,kBAAkB,GAAGJ,YAAY,CAACG,MAAxC;AACA,MAAME,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADW;AAErBC,EAAAA,UAAU,EAAE;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWE,IAAAA,MAAM,EAAE;AAAnB;AAFS,CAAvB;AAKA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,QAAQ,EAAE,CACR;AACEF,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADQ;AAHZ,CADkB,EAYlB;AACED,EAAAA,KAAK,EAAE,aADT;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,QAAQ,EAAE,CACR;AACEF,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADQ;AAHZ,CAZkB,CAApB;;AA0BA,MAAME,gBAAN,SAA+B3B,KAAK,CAACC,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC7C2B,KAD6C,GACrC;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,kBAAkB,EAAE,EAFd;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADqC;;AAAA,SAO7CC,QAP6C,GAOlC,MAAM;AAEf9B,MAAAA,KAAK,CAAC+B,IAAN,8BAAuC;AAErCC,QAAAA,QAAQ,EAAE,eAF2B;AAGrCC,QAAAA,SAAS,EAAE,YAH0B;AAIrCC,QAAAA,KAAK,EAAE,YAJ8B;AAKrCC,QAAAA,OAAO,EAAE,iBAL4B;AAMrCC,QAAAA,SAAS,EAAE,YAN0B;AAOrCC,QAAAA,QAAQ,EAAC;AAP4B,OAAvC,EAUKC,IAVL,CAUUC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACD,OAbL;AAcD,KAvB4C;;AAAA,SA2B7CC,KA3B6C,GA2BrC,MAAM;AACZ,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+BC,GAAG,IAAI;AACpC,YAAI,CAACA,GAAL,EAAU;AACRP,UAAAA,OAAO,CAACQ,IAAR,CAAa,SAAb;AACD;AACF,OAJD;AAKD,KAjC4C;;AAAA,SAmC7CC,YAnC6C,GAmC9BC,CAAC,IAAI;AAClB,UAAG,KAAKxB,KAAL,CAAWG,OAAX,IAAsB,IAAzB,EAA8B;AAC5B,aAAKsB,QAAL,CAAc;AAACtB,UAAAA,OAAO,EAAC;AAAT,SAAd;AACD,OAFD,MAEK;AACH,aAAKsB,QAAL,CAAc;AAACtB,UAAAA,OAAO,EAAC;AAAT,SAAd;AAED;;AACD,WAAKsB,QAAL,CACI;AACEC,QAAAA,SAAS,EAAEF,CAAC,CAACG,MAAF,CAASxB;AADtB,OADJ;AAKD,KA/C4C;;AAAA,SAiD7CyB,YAjD6C,GAiD9BJ,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACK,cAAF;AACA,WAAKX,KAAL,CAAWC,IAAX,CAAgBW,uBAAhB,CAAwC,CAACT,GAAD,EAAMU,MAAN,KAAiB;AACvD,YAAI,CAACV,GAAL,EAAU;AACR,gBAAMZ,OAAO,GAAGsB,MAAM,CAACrB,SAAP,CAAiB,CAAjB,CAAhB;AACAqB,UAAAA,MAAM,CAACrB,SAAP,GAAmBqB,MAAM,CAACrB,SAAP,CAAiB,CAAjB,CAAnB;AACAqB,UAAAA,MAAM,CAACxB,SAAP,GAAoBpB,MAAM,CAAC4C,MAAM,CAACxB,SAAR,CAAN,CAAyByB,MAAzB,CAAgC,YAAhC,CAApB;AACAD,UAAAA,MAAM,CAACtB,OAAP,GAAiBA,OAAjB;AACAsB,UAAAA,MAAM,CAACpB,QAAP,GAAkB,KAAKX,KAAL,CAAWG,OAA7B;AAEAW,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCgB,MAAzC;AAEAzD,UAAAA,KAAK,CAAC+B,IAAN,8BAAuC;AACrC0B,YAAAA;AADqC,WAAvC,EAGKnB,IAHL,CAGUC,GAAG,IAAI;AACXC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACD,WANL;AAQD;AACF,OAnBD;AAoBD,KAvE4C;AAAA;;AA4E7CiB,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG;AACbC,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,QAAQ,EAAE,IAA5B;AAAkCC,QAAAA,OAAO,EAAE;AAA3C,OAAD;AADM,KAAf;AADO,UAICC,iBAJD,GAIuB,KAAKrB,KAAL,CAAWC,IAJlC,CAICoB,iBAJD;AAAA,UAKCrC,kBALD,GAKwB,KAAKF,KAL7B,CAKCE,kBALD;AAOP,UAAMsC,cAAc,GAAG;AACrBjD,MAAAA,QAAQ,EAAE;AACRkD,QAAAA,EAAE,EAAE;AAAEjD,UAAAA,IAAI,EAAE;AAAR,SADI;AAERkD,QAAAA,EAAE,EAAE;AAAElD,UAAAA,IAAI,EAAE;AAAR;AAFI,OADW;AAKrBC,MAAAA,UAAU,EAAE;AACVgD,QAAAA,EAAE,EAAE;AAAEjD,UAAAA,IAAI,EAAE;AAAR,SADM;AAEVkD,QAAAA,EAAE,EAAE;AAAElD,UAAAA,IAAI,EAAE;AAAR;AAFM;AALS,KAAvB;AAUA,UAAMmD,kBAAkB,GAAG;AACzBlD,MAAAA,UAAU,EAAE;AACVgD,QAAAA,EAAE,EAAE;AACFjD,UAAAA,IAAI,EAAE,EADJ;AAEFE,UAAAA,MAAM,EAAE;AAFN,SADM;AAKVgD,QAAAA,EAAE,EAAE;AACFlD,UAAAA,IAAI,EAAE,EADJ;AAEFE,UAAAA,MAAM,EAAE;AAFN;AALM;AADa,KAA3B,CAjBO,CA6BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMkD,cAAc,GAAG1C,kBAAkB,CAAC2C,GAAnB,CAAuBC,OAAO,IACnD,oBAAC,kBAAD;AAAoB,MAAA,GAAG,EAAEA,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCA,OAAnC,CADqB,CAAvB;AAIA,WACE,oBAAC,IAAD,oBAAUN,cAAV;AAA0B,MAAA,QAAQ,EAAE,KAAKZ,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,IAAD,CAAM,IAAN,oBAAeY,cAAf;AAA+B,MAAA,KAAK,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGD,iBAAiB,CAAC,UAAD,EAAa;AAC7BJ,MAAAA,KAAK,EAAE,CACL;AACEE,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AADsB,KAAb,CAAjB,CAOE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,6BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADH,CADF,EAYE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,iBAAiB,CAAC,OAAD,EAAU;AAC1BJ,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,IAAI,EAAE,OADR;AAEEE,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL;AACED,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OALK;AADmB,KAAV,CAAjB,CAWE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADH,CAZF,EA2BE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,iBAAiB,CAAC,WAAD,EAAcL,MAAd,CAAjB,CACC,oBAAC,UAAD;AAAY,MAAA,QAAQ,MAApB;AAAqB,MAAA,MAAM,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CA3BF,EAiCE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,iBAAiB,CAAC,WAAD,EAAc;AAE9BJ,MAAAA,KAAK,EAAE,CACL;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,QAAQ,EAAE,IAA3B;AAAiCC,QAAAA,OAAO,EAAE;AAA1C,OADK;AAFuB,KAAd,CAAjB,CAKE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE3C,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADH,CAjCF,EA0CE,oBAAC,IAAD,CAAM,IAAN,oBAAegD,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAK3C,KAAL,CAAW0B,SAA9B;AAAyC,MAAA,QAAQ,EAAE,KAAKH,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CA1CF,EAoDE,oBAAC,IAAD,CAAM,IAAN,oBAAeoB,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAwB,MAAA,QAAQ,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CApDF,CADF;AA4DD;;AAlL4C;;AAuL/C,eAAe5C,gBAAf","sourcesContent":["import React, { Component } from 'react';\n//import Button from 'antd/es/button';\nimport axios from 'axios';\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  DatePicker ,\n} from 'antd';\nimport moment from 'moment'\nimport './App.css';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst formTailLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8, offset: 4 },\n};\n\nconst departments = [\n  {\n    value: 'Human Resource',\n    label: 'Human Resource',\n    children: [\n      {\n        value: 'HR Manager',\n        label: 'HR Manager',\n        \n      },\n    ],\n  },\n  {\n    value: 'Department2',\n    label: 'Department2',\n    children: [\n      {\n        value: 'Title2',\n        label: 'Title2',\n        \n      },\n    ],\n  },\n];\n\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    checked: false\n  };\n\n  onSubmit = () => {\n\n    axios.post(`http://localhost:8080/add`,{\n\n      fullName: \"Yasmin Marwan\",\n      birthDate: \"2019-02-02\",\n      email: \"y@mail.com\",\n      depName: \"Human Resources\",\n      titleName: \"HR Manager\",\n      isLeader:false\n\n    }  )\n        .then(res => {\n          console.log(res);\n          console.log(res.data);\n        })\n  };\n\n\n\n  check = () => {\n    this.props.form.validateFields(err => {\n      if (!err) {\n        console.info('success');\n      }\n    });\n  };\n\n  handleChange = e => {\n    if(this.state.checked == true){\n      this.setState({checked:false})\n    }else{\n      this.setState({checked:true})\n\n    }\n    this.setState(\n        {\n          checkNick: e.target.checked,\n        },\n    );\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        const depName = values.titleName[0];\n        values.titleName = values.titleName[1];\n        values.birthDate =  moment(values.birthDate).format(\"YYYY-MM-DD\");\n        values.depName = depName;\n        values.isLeader = this.state.checked;\n\n        console.log('Received values of form: ', values);\n\n        axios.post(`http://localhost:8080/add`,{\n          values\n        }  )\n            .then(res => {\n              console.log(res);\n              console.log(res.data);\n            })\n\n      }\n    });\n  };\n\n\n\n\n  render() {\n    const config = {\n      rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n    };\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    // const prefixSelector = getFieldDecorator('prefix', {\n    //   initialValue: '86',\n    // })(\n    //   <Select style={{ width: 70 }}>\n    //     <Option value=\"86\">+86</Option>\n    //     <Option value=\"87\">+87</Option>\n    //   </Select>,\n    // );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    return (\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n        <Form.Item {...formItemLayout} label=\"FullName\">\n          {getFieldDecorator('fullName', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your name',\n              },\n            ],\n          })(<Input placeholder=\"Please input your Full Name\" />)}\n        </Form.Item>\n\n        <Form.Item label=\"E-mail\">\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              }, \n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(<Input />)}\n        </Form.Item>\n        \n        <Form.Item label=\"BirthDate\">\n          {getFieldDecorator('birthDate', config)(\n            <DatePicker showTime format=\"YYYY-MM-DD\" />,\n          )}\n        </Form.Item>\n        \n        <Form.Item label=\"Title\">\n          {getFieldDecorator('titleName', {\n\n            rules: [\n              { type: 'array', required: true, message: 'Please select your Title' },\n            ],\n          })(<Cascader options={departments} />)}\n        </Form.Item>\n\n        <Form.Item {...tailFormItemLayout}>\n\n          <Checkbox checked={this.state.checkNick} onChange={this.handleChange}>\n            Leader\n          </Checkbox>\n\n        </Form.Item>\n         \n\n        \n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\"  htmlType=\"submit\" >\n            Register\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\n\nexport default RegistrationForm;\n"]},"metadata":{},"sourceType":"module"}