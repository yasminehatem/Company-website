{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Project\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import Button from 'antd/es/button';\n\nimport axios from 'axios';\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete, DatePicker } from 'antd';\nimport moment from 'moment';\nimport './App.css';\nconst Option = Select.Option;\nconst AutoCompleteOption = AutoComplete.Option;\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\nconst departments = [{\n  value: 'Human Resource',\n  label: 'Human Resource'\n}, {\n  value: 'Department2',\n  label: 'Department2',\n  children: [{\n    value: 'Title2',\n    label: 'Title2'\n  }]\n}];\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      checked: false,\n      dropDownMenu: [],\n      cascaderValue: \"\"\n    };\n\n    this.onSubmit = () => {\n      axios.post(\"http://localhost:8080/add\", {\n        fullName: \"Yasmin Marwan\",\n        birthDate: \"2019-02-02\",\n        email: \"y@mail.com\",\n        depName: \"Human Resources\",\n        titleName: \"HR Manager\",\n        isLeader: false\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    };\n\n    this.check = () => {\n      this.props.form.validateFields(err => {\n        if (!err) {\n          console.info('success');\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      if (this.state.checked == true) {\n        this.setState({\n          checked: false\n        });\n      } else {\n        this.setState({\n          checked: true\n        });\n      }\n\n      this.setState({\n        checkNick: e.target.checked\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          //const depName = values.titleName[0];\n          values.titleName = values.titleName[0];\n          values.birthDate = moment(values.birthDate).format(\"YYYY-MM-DD\"); //values.depName = depName;\n\n          values.isLeader = this.state.checked;\n          console.log('Received values of form: ', values);\n          axios.post(\"http://localhost:8080/add\", {\n            birthDate: values.birthDate,\n            // depName: values.depName,\n            email: values.email,\n            fullName: values.fullName,\n            isLeader: values.isLeader,\n            titleName: values.titleName\n          }).then(res => {\n            console.log(res);\n            console.log(res.data);\n          });\n        }\n      });\n    };\n\n    this.addTitlesAndDepartments = e => {\n      const array = [];\n      axios.get(\"http://localhost:8080/titles\").then(res => {\n        const titlesNames = res.data;\n        titlesNames.forEach(item => {\n          const text = {\n            value: item,\n            label: item\n          };\n          array.push(text);\n        }); //console.log(array);\n\n        this.setState({\n          dropDownMenu: array\n        });\n      }); //console.log(departments);\n      //console.log(array);\n    };\n\n    this.enableLeaderCheck = e => {\n      axios.get(\"http://localhost:8080/titlesObjects\").then(res => {\n        const titles = res.data;\n        console.log(titles);\n        console.log(this.valueofSelected);\n      });\n    };\n\n    this.valueofSelected = \"\";\n  }\n\n  render() {\n    const config = {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: 'Please select time!'\n      }]\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const autoCompleteResult = this.state.autoCompleteResult;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const websiteOptions = autoCompleteResult.map(website => React.createElement(AutoCompleteOption, {\n      key: website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, website));\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      label: \"FullName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), getFieldDecorator('fullName', {\n      rules: [{\n        required: true,\n        message: 'Please input your name'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"Please input your Full Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"BirthDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, getFieldDecorator('birthDate', config)(React.createElement(DatePicker, {\n      showTime: true,\n      format: \"YYYY-MM-DD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, getFieldDecorator('titleName', {\n      rules: [{\n        type: 'array',\n        required: true,\n        message: 'Please select your Title'\n      }]\n    })(React.createElement(Cascader, {\n      options: this.state.dropDownMenu,\n      onChange: this.enableLeaderCheck,\n      value: this.valueofSelected,\n      onPopupVisibleChange: this.addTitlesAndDepartments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      checked: this.state.checkNick,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Leader\")), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Register\")));\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\Project\\frontend\\src\\App.js"],"names":["React","Component","axios","Form","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","DatePicker","moment","Option","AutoCompleteOption","formTailLayout","labelCol","span","wrapperCol","offset","departments","value","label","children","RegistrationForm","state","confirmDirty","autoCompleteResult","checked","dropDownMenu","cascaderValue","onSubmit","post","fullName","birthDate","email","depName","titleName","isLeader","then","res","console","log","data","check","props","form","validateFields","err","info","handleChange","e","setState","checkNick","target","handleSubmit","preventDefault","validateFieldsAndScroll","values","format","addTitlesAndDepartments","array","get","titlesNames","forEach","item","text","push","enableLeaderCheck","titles","valueofSelected","render","config","rules","type","required","message","getFieldDecorator","formItemLayout","xs","sm","tailFormItemLayout","websiteOptions","map","website"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Button from 'antd/es/button';\nimport axios from 'axios';\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  DatePicker ,\n} from 'antd';\nimport moment from 'moment'\nimport './App.css';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst formTailLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8, offset: 4 },\n};\n\nconst departments = [\n  {\n    value: 'Human Resource',\n    label: 'Human Resource'\n\n  },\n  {\n    value: 'Department2',\n    label: 'Department2',\n    children: [\n      {\n        value: 'Title2',\n        label: 'Title2',\n        \n      },\n    ],\n  },\n];\n\n\nclass RegistrationForm extends React.Component {\n\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    checked: false,\n    dropDownMenu:[\n    ],\n    cascaderValue:\"\"\n  };\n\n  onSubmit = () => {\n\n    axios.post(`http://localhost:8080/add`,{\n\n      fullName: \"Yasmin Marwan\",\n      birthDate: \"2019-02-02\",\n      email: \"y@mail.com\",\n      depName: \"Human Resources\",\n      titleName: \"HR Manager\",\n      isLeader:false\n\n    }  )\n        .then(res => {\n          console.log(res);\n          console.log(res.data);\n        })\n  };\n\n\n\n  check = () => {\n    this.props.form.validateFields(err => {\n      if (!err) {\n        console.info('success');\n      }\n    });\n  };\n\n  handleChange = e => {\n    if(this.state.checked == true){\n      this.setState({checked:false})\n    }else{\n      this.setState({checked:true})\n\n    }\n    this.setState(\n        {\n          checkNick: e.target.checked,\n        },\n    );\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        //const depName = values.titleName[0];\n        values.titleName = values.titleName[0];\n        values.birthDate =  moment(values.birthDate).format(\"YYYY-MM-DD\");\n        //values.depName = depName;\n        values.isLeader = this.state.checked;\n\n        console.log('Received values of form: ', values);\n\n        axios.post(`http://localhost:8080/add`,{\n          birthDate: values.birthDate,\n          // depName: values.depName,\n          email: values.email,\n          fullName: values.fullName,\n          isLeader: values.isLeader,\n          titleName: values.titleName\n        }  )\n            .then(res => {\n              console.log(res);\n              console.log(res.data);\n            })\n\n      }\n    });\n  };\n\n  addTitlesAndDepartments = e =>{\n\n    const array =[]\n\n    axios.get(`http://localhost:8080/titles`)\n        .then(res => {\n          const titlesNames = res.data;\n          titlesNames.forEach((item) => {\n            const text = {\n              value:item,\n              label:item\n            }\n            array.push(text);\n          })\n          //console.log(array);\n          this.setState({dropDownMenu: array});\n        })\n\n    //console.log(departments);\n    //console.log(array);\n\n  };\n\n  enableLeaderCheck = e => {\n\n\n    axios.get(`http://localhost:8080/titlesObjects`)\n        .then(res => {\n          const titles = res.data;\n\n          console.log(titles);\n          console.log(this.valueofSelected);\n\n\n        })\n\n  }\n\n   valueofSelected = \"\";\n\n\n\n  render() {\n    const config = {\n      rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n    };\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    return (\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n        <Form.Item {...formItemLayout} label=\"FullName\">\n          {getFieldDecorator('fullName', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your name',\n              },\n            ],\n          })(<Input placeholder=\"Please input your Full Name\" />)}\n        </Form.Item>\n\n        <Form.Item label=\"E-mail\">\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              }, \n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(<Input />)}\n        </Form.Item>\n        \n        <Form.Item label=\"BirthDate\">\n          {getFieldDecorator('birthDate', config)(\n            <DatePicker showTime format=\"YYYY-MM-DD\" />,\n          )}\n        </Form.Item>\n        \n        <Form.Item label=\"Title\">\n          {getFieldDecorator('titleName', {\n\n            rules: [\n              { type: 'array', required: true, message: 'Please select your Title' },\n            ],\n          })(<Cascader options={this.state.dropDownMenu} onChange={this.enableLeaderCheck} value={this.valueofSelected} onPopupVisibleChange= {this.addTitlesAndDepartments} /> )}\n        </Form.Item>\n\n        <Form.Item {...tailFormItemLayout}>\n\n          <Checkbox checked={this.state.checkNick} onChange={this.handleChange}>\n            Leader\n          </Checkbox>\n\n        </Form.Item>\n         \n\n        \n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\"  htmlType=\"submit\" >\n            Register\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\n\nexport default RegistrationForm;\n"]},"metadata":{},"sourceType":"module"}